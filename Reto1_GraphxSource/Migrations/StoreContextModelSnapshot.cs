// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reto1.API;

#nullable disable

namespace Reto1.API.Migrations
{
    [DbContext(typeof(StoreContext))]
    partial class StoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Reto1.API.Entities.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Attachments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            Type = 3,
                            Url = "https://example.com/files/design1.png"
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 3,
                            Type = 1,
                            Url = "https://example.com/files/poster-proof.pdf"
                        });
                });

            modelBuilder.Entity("Reto1.API.Entities.Mug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CapacityInMl")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Mugs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacityInMl = 350,
                            Color = "White",
                            Price = 12.99m,
                            Sku = "MG001"
                        },
                        new
                        {
                            Id = 2,
                            CapacityInMl = 500,
                            Color = "Black",
                            Price = 14.99m,
                            Sku = "MG002"
                        },
                        new
                        {
                            Id = 3,
                            CapacityInMl = 300,
                            Color = "Blue",
                            Price = 11.99m,
                            Sku = "MG003"
                        },
                        new
                        {
                            Id = 4,
                            CapacityInMl = 400,
                            Color = "Red",
                            Price = 13.99m,
                            Sku = "MG004"
                        },
                        new
                        {
                            Id = 5,
                            CapacityInMl = 600,
                            Color = "Gray",
                            Price = 16.99m,
                            Sku = "MG005"
                        });
                });

            modelBuilder.Entity("Reto1.API.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("MugId")
                        .HasColumnType("int");

                    b.Property<int?>("PosterId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TShirtId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MugId");

                    b.HasIndex("PosterId");

                    b.HasIndex("TShirtId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Client = "Alice",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Black T-Shirt order",
                            Status = 0,
                            TShirtId = 1,
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Client = "Bob",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Red Mug order",
                            MugId = 3,
                            Status = 4,
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Client = "Charlie",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Glossy Poster order",
                            PosterId = 5,
                            Status = 3,
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Reto1.API.Entities.Poster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("HeightCm")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("PaperType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("WidthCm")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("Posters", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HeightCm = 40.0m,
                            PaperType = "Glossy",
                            Price = 8.99m,
                            Sku = "PS001",
                            WidthCm = 30.0m
                        },
                        new
                        {
                            Id = 2,
                            HeightCm = 60.0m,
                            PaperType = "Matte",
                            Price = 12.99m,
                            Sku = "PS002",
                            WidthCm = 40.0m
                        },
                        new
                        {
                            Id = 3,
                            HeightCm = 80.0m,
                            PaperType = "Canvas",
                            Price = 24.99m,
                            Sku = "PS003",
                            WidthCm = 60.0m
                        },
                        new
                        {
                            Id = 4,
                            HeightCm = 50.0m,
                            PaperType = "Photo Paper",
                            Price = 15.99m,
                            Sku = "PS004",
                            WidthCm = 35.0m
                        },
                        new
                        {
                            Id = 5,
                            HeightCm = 100.0m,
                            PaperType = "Vinyl",
                            Price = 34.99m,
                            Sku = "PS005",
                            WidthCm = 70.0m
                        });
                });

            modelBuilder.Entity("Reto1.API.Entities.TShirt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Size")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TShirts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Red",
                            Price = 15.99m,
                            Size = "S",
                            Sku = "TS001"
                        },
                        new
                        {
                            Id = 2,
                            Color = "Blue",
                            Price = 15.99m,
                            Size = "M",
                            Sku = "TS002"
                        },
                        new
                        {
                            Id = 3,
                            Color = "Black",
                            Price = 17.99m,
                            Size = "L",
                            Sku = "TS003"
                        },
                        new
                        {
                            Id = 4,
                            Color = "White",
                            Price = 17.99m,
                            Size = "XL",
                            Sku = "TS004"
                        },
                        new
                        {
                            Id = 5,
                            Color = "Green",
                            Price = 16.99m,
                            Size = "M",
                            Sku = "TS005"
                        });
                });

            modelBuilder.Entity("Reto1.API.Entities.Attachment", b =>
                {
                    b.HasOne("Reto1.API.Entities.Order", "Order")
                        .WithMany("Attachments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Reto1.API.Entities.Order", b =>
                {
                    b.HasOne("Reto1.API.Entities.Mug", "Mug")
                        .WithMany()
                        .HasForeignKey("MugId");

                    b.HasOne("Reto1.API.Entities.Poster", "Poster")
                        .WithMany()
                        .HasForeignKey("PosterId");

                    b.HasOne("Reto1.API.Entities.TShirt", "TShirt")
                        .WithMany()
                        .HasForeignKey("TShirtId");

                    b.Navigation("Mug");

                    b.Navigation("Poster");

                    b.Navigation("TShirt");
                });

            modelBuilder.Entity("Reto1.API.Entities.Order", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
